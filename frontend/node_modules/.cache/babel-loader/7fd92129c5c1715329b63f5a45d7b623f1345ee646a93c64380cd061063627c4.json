{"ast":null,"code":"var _jsxFileName = \"C:\\\\test\\\\VTO.1\\\\frontend\\\\src\\\\Components\\\\ConfirmOrder\\\\ConfirmOrder.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport './ConfirmOrder.css';\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ConfirmOrder = ({\n  cartItems,\n  getTotalCartAmount\n}) => {\n  _s();\n  const [fullName, setFullName] = useState(\"\");\n  const [city, setCity] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [paymentMethod, setPaymentMethod] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false); // Loading state\n  const [message, setMessage] = useState(null); // Message for success or error\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setIsLoading(true);\n    setMessage(null);\n\n    // Validate fields\n    if (!fullName || !city || !address || !paymentMethod) {\n      setMessage({\n        type: \"error\",\n        text: \"Please fill in all fields.\"\n      });\n      setIsLoading(false);\n      return;\n    }\n    const orderDetails = {\n      fullName,\n      city,\n      address,\n      paymentMethod,\n      cartItems,\n      totalAmount: getTotalCartAmount()\n    };\n    try {\n      const response = await fetch(\"http://localhost:4000/confirmorder\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"auth-token\": localStorage.getItem(\"token\")\n        },\n        body: JSON.stringify(orderDetails)\n      });\n      const data = await response.json();\n      if (data.success) {\n        setMessage({\n          type: \"success\",\n          text: \"Order confirmed successfully!\"\n        });\n        setIsLoading(false);\n        setTimeout(() => navigate(\"/order-success\"), 2000); // Navigate after 2 seconds\n      } else {\n        throw new Error(data.message || \"Failed to confirm order.\");\n      }\n    } catch (error) {\n      console.error(\"Error confirming order:\", error);\n      setMessage({\n        type: \"error\",\n        text: error.message || \"Something went wrong, please try again.\"\n      });\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Confirm Your Order\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: message.type === \"error\" ? \"red\" : \"green\",\n        marginBottom: \"10px\"\n      },\n      children: message.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Full Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: fullName,\n          onChange: e => setFullName(e.target.value),\n          placeholder: \"Enter your full name\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"City:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: city,\n          onChange: e => setCity(e.target.value),\n          placeholder: \"Enter your city\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Address:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: address,\n          onChange: e => setAddress(e.target.value),\n          placeholder: \"Enter your address\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Payment Method:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: paymentMethod,\n          onChange: e => setPaymentMethod(e.target.value),\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select Payment Method\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Cash\",\n            children: \"Cash\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Card\",\n            children: \"Card\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: isLoading,\n        children: isLoading ? \"Processing...\" : \"Proceed to Payment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n};\n_s(ConfirmOrder, \"IAJVAmDVExP8A1btxJGwCrmHsJk=\", false, function () {\n  return [useNavigate];\n});\n_c = ConfirmOrder;\nexport default ConfirmOrder;\nvar _c;\n$RefreshReg$(_c, \"ConfirmOrder\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","ConfirmOrder","cartItems","getTotalCartAmount","_s","fullName","setFullName","city","setCity","address","setAddress","paymentMethod","setPaymentMethod","isLoading","setIsLoading","message","setMessage","navigate","handleSubmit","e","preventDefault","type","text","orderDetails","totalAmount","response","fetch","method","headers","localStorage","getItem","body","JSON","stringify","data","json","success","setTimeout","Error","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","marginBottom","onSubmit","value","onChange","target","placeholder","required","disabled","_c","$RefreshReg$"],"sources":["C:/test/VTO.1/frontend/src/Components/ConfirmOrder/ConfirmOrder.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport './ConfirmOrder.css';\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst ConfirmOrder = ({ cartItems, getTotalCartAmount }) => {\r\n    const [fullName, setFullName] = useState(\"\");\r\n    const [city, setCity] = useState(\"\");\r\n    const [address, setAddress] = useState(\"\");\r\n    const [paymentMethod, setPaymentMethod] = useState(\"\");\r\n    const [isLoading, setIsLoading] = useState(false); // Loading state\r\n    const [message, setMessage] = useState(null); // Message for success or error\r\n    const navigate = useNavigate();\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setIsLoading(true);\r\n        setMessage(null);\r\n\r\n        // Validate fields\r\n        if (!fullName || !city || !address || !paymentMethod) {\r\n            setMessage({ type: \"error\", text: \"Please fill in all fields.\" });\r\n            setIsLoading(false);\r\n            return;\r\n        }\r\n\r\n        const orderDetails = {\r\n            fullName,\r\n            city,\r\n            address,\r\n            paymentMethod,\r\n            cartItems,\r\n            totalAmount: getTotalCartAmount(),\r\n        };\r\n\r\n        try {\r\n            const response = await fetch(\"http://localhost:4000/confirmorder\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"auth-token\": localStorage.getItem(\"token\"),\r\n                },\r\n                body: JSON.stringify(orderDetails),\r\n            });\r\n\r\n            const data = await response.json();\r\n\r\n            if (data.success) {\r\n                setMessage({ type: \"success\", text: \"Order confirmed successfully!\" });\r\n                setIsLoading(false);\r\n                setTimeout(() => navigate(\"/order-success\"), 2000); // Navigate after 2 seconds\r\n            } else {\r\n                throw new Error(data.message || \"Failed to confirm order.\");\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error confirming order:\", error);\r\n            setMessage({ type: \"error\", text: error.message || \"Something went wrong, please try again.\" });\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Confirm Your Order</h2>\r\n            {message && (\r\n                <div\r\n                    style={{\r\n                        color: message.type === \"error\" ? \"red\" : \"green\",\r\n                        marginBottom: \"10px\",\r\n                    }}\r\n                >\r\n                    {message.text}\r\n                </div>\r\n            )}\r\n            <form onSubmit={handleSubmit}>\r\n                <div>\r\n                    <label>Full Name:</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        value={fullName}\r\n                        onChange={(e) => setFullName(e.target.value)}\r\n                        placeholder=\"Enter your full name\"\r\n                        required\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <label>City:</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        value={city}\r\n                        onChange={(e) => setCity(e.target.value)}\r\n                        placeholder=\"Enter your city\"\r\n                        required\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <label>Address:</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        value={address}\r\n                        onChange={(e) => setAddress(e.target.value)}\r\n                        placeholder=\"Enter your address\"\r\n                        required\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <label>Payment Method:</label>\r\n                    <select\r\n                        value={paymentMethod}\r\n                        onChange={(e) => setPaymentMethod(e.target.value)}\r\n                        required\r\n                    >\r\n                        <option value=\"\">Select Payment Method</option>\r\n                        <option value=\"Cash\">Cash</option>\r\n                        <option value=\"Card\">Card</option>\r\n                    </select>\r\n                </div>\r\n                <button type=\"submit\" disabled={isLoading}>\r\n                    {isLoading ? \"Processing...\" : \"Proceed to Payment\"}\r\n                </button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ConfirmOrder;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}