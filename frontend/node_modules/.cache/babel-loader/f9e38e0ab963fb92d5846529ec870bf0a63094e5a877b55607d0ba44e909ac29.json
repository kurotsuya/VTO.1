{"ast":null,"code":"var _jsxFileName = \"D:\\\\299\\\\VTO.1\\\\frontend\\\\src\\\\Pages\\\\UpdateProfile.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './CSS/UpdateProfile.css'; // Create a new CSS file for styling\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UpdateProfile = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    username: '',\n    email: '',\n    password: ''\n  });\n  const history = useHistory();\n  useEffect(() => {\n    // Fetch the current user's profile data when the component loads\n    const fetchUserProfile = async () => {\n      const token = localStorage.getItem('auth-token');\n      if (!token) {\n        history.push('/login'); // Redirect to login if no token exists\n        return;\n      }\n      const response = await fetch('http://localhost:4000/getprofile', {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'auth-token': token // Send token to authenticate user\n        }\n      });\n      const data = await response.json();\n      if (data.success) {\n        setFormData({\n          username: data.username,\n          email: data.email,\n          password: '' // Don't display the password\n        });\n      } else {\n        alert('Error fetching profile');\n      }\n    };\n    fetchUserProfile();\n  }, [history]);\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const token = localStorage.getItem('auth-token');\n    if (!token) {\n      alert('You must be logged in to update your profile');\n      return;\n    }\n    const response = await fetch('http://localhost:4000/updateprofile', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'auth-token': token // Send token to authenticate user\n      },\n      body: JSON.stringify(formData)\n    });\n    const data = await response.json();\n    if (data.success) {\n      alert('Profile updated successfully');\n      history.push('/'); // Redirect to home or profile page\n    } else {\n      alert(data.errors);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"update-profile\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Update Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"username\",\n        value: formData.username,\n        onChange: handleChange,\n        placeholder: \"Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        value: formData.email,\n        onChange: handleChange,\n        placeholder: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        value: formData.password,\n        onChange: handleChange,\n        placeholder: \"New Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Update Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n_s(UpdateProfile, \"+Djq9H2k+oZzUSf/Chhyx9gMh54=\", false, function () {\n  return [useHistory];\n});\n_c = UpdateProfile;\nexport default UpdateProfile;\nvar _c;\n$RefreshReg$(_c, \"UpdateProfile\");","map":{"version":3,"names":["React","useState","useEffect","useHistory","jsxDEV","_jsxDEV","UpdateProfile","_s","formData","setFormData","username","email","password","history","fetchUserProfile","token","localStorage","getItem","push","response","fetch","method","headers","data","json","success","alert","handleChange","e","target","name","value","handleSubmit","preventDefault","body","JSON","stringify","errors","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","placeholder","_c","$RefreshReg$"],"sources":["D:/299/VTO.1/frontend/src/Pages/UpdateProfile.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './CSS/UpdateProfile.css'; // Create a new CSS file for styling\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst UpdateProfile = () => {\r\n  const [formData, setFormData] = useState({\r\n    username: '',\r\n    email: '',\r\n    password: '',\r\n  });\r\n\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    // Fetch the current user's profile data when the component loads\r\n    const fetchUserProfile = async () => {\r\n      const token = localStorage.getItem('auth-token');\r\n      if (!token) {\r\n        history.push('/login'); // Redirect to login if no token exists\r\n        return;\r\n      }\r\n\r\n      const response = await fetch('http://localhost:4000/getprofile', {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'auth-token': token, // Send token to authenticate user\r\n        },\r\n      });\r\n\r\n      const data = await response.json();\r\n      if (data.success) {\r\n        setFormData({\r\n          username: data.username,\r\n          email: data.email,\r\n          password: '', // Don't display the password\r\n        });\r\n      } else {\r\n        alert('Error fetching profile');\r\n      }\r\n    };\r\n\r\n    fetchUserProfile();\r\n  }, [history]);\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const token = localStorage.getItem('auth-token');\r\n    if (!token) {\r\n      alert('You must be logged in to update your profile');\r\n      return;\r\n    }\r\n\r\n    const response = await fetch('http://localhost:4000/updateprofile', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'auth-token': token, // Send token to authenticate user\r\n      },\r\n      body: JSON.stringify(formData),\r\n    });\r\n\r\n    const data = await response.json();\r\n\r\n    if (data.success) {\r\n      alert('Profile updated successfully');\r\n      history.push('/'); // Redirect to home or profile page\r\n    } else {\r\n      alert(data.errors);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"update-profile\">\r\n      <h1>Update Profile</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          name=\"username\"\r\n          value={formData.username}\r\n          onChange={handleChange}\r\n          placeholder=\"Username\"\r\n        />\r\n        <input\r\n          type=\"email\"\r\n          name=\"email\"\r\n          value={formData.email}\r\n          onChange={handleChange}\r\n          placeholder=\"Email\"\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          name=\"password\"\r\n          value={formData.password}\r\n          onChange={handleChange}\r\n          placeholder=\"New Password\"\r\n        />\r\n        <button type=\"submit\">Update Profile</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UpdateProfile;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}