{"ast":null,"code":"var _jsxFileName = \"D:\\\\VTO.1\\\\frontend\\\\src\\\\Pages\\\\Profile.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './Profile.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Profile = () => {\n  _s();\n  const [profileData, setProfileData] = useState(null);\n  const [newPassword, setNewPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const [loading, setLoading] = useState(true);\n\n  // Fetch profile data on component mount\n  useEffect(() => {\n    const fetchProfileData = async () => {\n      try {\n        const response = await axios.get('http://localhost:4000/profile', {\n          headers: {\n            'auth-token': localStorage.getItem('auth-token')\n          }\n        });\n        setProfileData(response.data.user);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching profile:', error);\n        setMessage('Failed to load profile data');\n        setLoading(false);\n      }\n    };\n    fetchProfileData();\n  }, []);\n\n  // Handle password reset\n  const handlePasswordReset = async () => {\n    try {\n      const response = await axios.post('http://localhost:4000/reset-password', {\n        newPassword\n      }, {\n        headers: {\n          'auth-token': localStorage.getItem('auth-token')\n        }\n      });\n      if (response.data.success) {\n        setMessage('Password reset successful');\n        setNewPassword(''); // Clear input field on success\n      } else {\n        setMessage('Failed to reset password');\n      }\n    } catch (error) {\n      console.error('Error resetting password:', error);\n      setMessage('Failed to reset password');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Your Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"profile-message\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 19\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading profile data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this) : profileData && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 16\n        }, this), \" \", profileData.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 16\n        }, this), \" \", profileData.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 16\n        }, this), \" \", '********']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-reset\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Enter new password\",\n        value: newPassword,\n        onChange: e => setNewPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handlePasswordReset,\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(Profile, \"JQxerosoeo20PpNKr2cbuWemTNs=\");\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Profile","_s","profileData","setProfileData","newPassword","setNewPassword","message","setMessage","loading","setLoading","fetchProfileData","response","get","headers","localStorage","getItem","data","user","error","console","handlePasswordReset","post","success","className","children","fileName","_jsxFileName","lineNumber","columnNumber","name","email","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["D:/VTO.1/frontend/src/Pages/Profile.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './Profile.css';\r\n\r\nconst Profile = () => {\r\n  const [profileData, setProfileData] = useState(null);\r\n  const [newPassword, setNewPassword] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // Fetch profile data on component mount\r\n  useEffect(() => {\r\n    const fetchProfileData = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:4000/profile', {\r\n          headers: {\r\n            'auth-token': localStorage.getItem('auth-token'),\r\n          },\r\n        });\r\n        setProfileData(response.data.user);\r\n        setLoading(false);\r\n      } catch (error) {\r\n        console.error('Error fetching profile:', error);\r\n        setMessage('Failed to load profile data');\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchProfileData();\r\n  }, []);\r\n\r\n  // Handle password reset\r\n  const handlePasswordReset = async () => {\r\n    try {\r\n      const response = await axios.post(\r\n        'http://localhost:4000/reset-password',\r\n        { newPassword },\r\n        {\r\n          headers: {\r\n            'auth-token': localStorage.getItem('auth-token'),\r\n          },\r\n        }\r\n      );\r\n      if (response.data.success) {\r\n        setMessage('Password reset successful');\r\n        setNewPassword(''); // Clear input field on success\r\n      } else {\r\n        setMessage('Failed to reset password');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error resetting password:', error);\r\n      setMessage('Failed to reset password');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"profile\">\r\n      <h1>Your Profile</h1>\r\n      {message && <p className=\"profile-message\">{message}</p>}\r\n      {loading ? (\r\n        <p>Loading profile data...</p>\r\n      ) : (\r\n        profileData && (\r\n          <div className=\"profile-info\">\r\n            <p><strong>Name:</strong> {profileData.name}</p>\r\n            <p><strong>Email:</strong> {profileData.email}</p>\r\n            <p><strong>Password:</strong> {'********'}</p>\r\n          </div>\r\n        )\r\n      )}\r\n\r\n      <div className=\"profile-reset\">\r\n        <h3>Reset Password</h3>\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Enter new password\"\r\n          value={newPassword}\r\n          onChange={(e) => setNewPassword(e.target.value)}\r\n        />\r\n        <button onClick={handlePasswordReset}>Reset Password</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}