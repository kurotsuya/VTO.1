{"ast":null,"code":"var _jsxFileName = \"D:\\\\299\\\\VTO.1\\\\frontend\\\\src\\\\Context\\\\ShopContext.jsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ShopContext = /*#__PURE__*/createContext(null);\nconst getDefaultCart = () => {\n  let cart = {};\n  for (let index = 0; index < 300 + 1; index++) {\n    cart[index] = 0;\n  }\n  return cart;\n};\nconst ShopContextProvider = props => {\n  _s();\n  const [all_product, setAll_Product] = useState([]);\n  const [cartItems, setCartItems] = useState(getDefaultCart());\n  const [shippingDetails, setShippingDetails] = useState({\n    name: '',\n    phone: '',\n    city: '',\n    address: ''\n  });\n  const [paymentMethod, setPaymentMethod] = useState('');\n  const [orderPlaced, setOrderPlaced] = useState(false);\n\n  // Fetch all products and cart items on load\n  useEffect(() => {\n    fetch('http://localhost:4000/allproducts').then(response => response.json()).then(data => setAll_Product(data));\n    if (localStorage.getItem('auth-token')) {\n      fetch('http://localhost:4000/getcart', {\n        method: 'POST',\n        headers: {\n          Accept: 'application/form-data',\n          'auth-token': `${localStorage.getItem('auth-token')}`,\n          'Content-Type': 'application/json'\n        },\n        body: \"\"\n      }).then(response => response.json()).then(data => setCartItems(data));\n    }\n  }, []);\n\n  // Add item to cart\n  const addToCart = itemId => {\n    setCartItems(prev => ({\n      ...prev,\n      [itemId]: prev[itemId] + 1\n    }));\n    if (localStorage.getItem('auth-token')) {\n      fetch('http://localhost:4000/addtocart', {\n        method: 'POST',\n        headers: {\n          Accept: 'application/form-data',\n          'auth-token': `${localStorage.getItem('auth-token')}`,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          \"itemId\": itemId\n        })\n      }).then(response => response.json()).then(data => console.log(data));\n    }\n  };\n\n  // Remove item from cart\n  const removeFromCart = itemId => {\n    setCartItems(prev => ({\n      ...prev,\n      [itemId]: prev[itemId] - 1\n    }));\n    if (localStorage.getItem('auth-token')) {\n      fetch('http://localhost:4000/removefromcart', {\n        method: 'POST',\n        headers: {\n          Accept: 'application/form-data',\n          'auth-token': `${localStorage.getItem('auth-token')}`,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          \"itemId\": itemId\n        })\n      }).then(response => response.json()).then(data => console.log(data));\n    }\n  };\n\n  // Get total cart amount\n  const getTotalCartAmount = () => {\n    let totalAmount = 0;\n    for (const item in cartItems) {\n      if (cartItems[item] > 0) {\n        let itemInfo = all_product.find(product => product.id === Number(item));\n        if (itemInfo) {\n          totalAmount += itemInfo.new_price * cartItems[item];\n        }\n      }\n    }\n    return totalAmount;\n  };\n\n  // Get total cart items\n  const getTotalCartItems = () => {\n    let totalItem = 0;\n    for (const item in cartItems) {\n      if (cartItems[item] > 0) {\n        totalItem += cartItems[item];\n      }\n    }\n    return totalItem;\n  };\n\n  // Handle order placement\n  const handleOrderPlacement = async () => {\n    if (shippingDetails.name && shippingDetails.phone && shippingDetails.city && shippingDetails.address && paymentMethod) {\n      const orderData = {\n        shippingDetails,\n        paymentMethod,\n        cartData: cartItems\n      };\n      try {\n        const response = await fetch('http://localhost:4000/checkout', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'auth-token': localStorage.getItem('auth-token')\n          },\n          body: JSON.stringify(orderData)\n        });\n        if (!response.ok) {\n          throw new Error(\"Network response was not ok\");\n        }\n        const data = await response.json();\n        if (data.success) {\n          setOrderPlaced(true);\n          setCartItems(getDefaultCart()); // Clear cart after order is placed\n          alert(data.message);\n        } else {\n          alert(\"Order placement failed. Please try again.\");\n        }\n      } catch (error) {\n        console.error(\"Error placing order:\", error);\n        alert(\"An error occurred. Please try again.\");\n      }\n    } else {\n      alert('Please fill in all details and select a payment method');\n    }\n  };\n  const contextValue = {\n    getTotalCartItems,\n    getTotalCartAmount,\n    all_product,\n    cartItems,\n    addToCart,\n    removeFromCart,\n    handleOrderPlacement,\n    setShippingDetails,\n    setPaymentMethod,\n    orderPlaced\n  };\n  return /*#__PURE__*/_jsxDEV(ShopContext.Provider, {\n    value: contextValue,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 170,\n    columnNumber: 5\n  }, this);\n};\n_s(ShopContextProvider, \"1aUGmbYiZANmA9STIdVy2ZHQi4w=\");\n_c = ShopContextProvider;\nexport default ShopContextProvider;\nvar _c;\n$RefreshReg$(_c, \"ShopContextProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jsxDEV","_jsxDEV","ShopContext","getDefaultCart","cart","index","ShopContextProvider","props","_s","all_product","setAll_Product","cartItems","setCartItems","shippingDetails","setShippingDetails","name","phone","city","address","paymentMethod","setPaymentMethod","orderPlaced","setOrderPlaced","fetch","then","response","json","data","localStorage","getItem","method","headers","Accept","body","addToCart","itemId","prev","JSON","stringify","console","log","removeFromCart","getTotalCartAmount","totalAmount","item","itemInfo","find","product","id","Number","new_price","getTotalCartItems","totalItem","handleOrderPlacement","orderData","cartData","ok","Error","success","alert","message","error","contextValue","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/299/VTO.1/frontend/src/Context/ShopContext.jsx"],"sourcesContent":["import React, { createContext, useState, useEffect } from \"react\";\r\n\r\nexport const ShopContext = createContext(null);\r\n\r\nconst getDefaultCart = () => {\r\n  let cart = {};\r\n  for (let index = 0; index < 300 + 1; index++) {\r\n    cart[index] = 0;\r\n  }\r\n  return cart;\r\n};\r\n\r\nconst ShopContextProvider = (props) => {\r\n  const [all_product, setAll_Product] = useState([]);\r\n  const [cartItems, setCartItems] = useState(getDefaultCart());\r\n  const [shippingDetails, setShippingDetails] = useState({\r\n    name: '',\r\n    phone: '',\r\n    city: '',\r\n    address: '',\r\n  });\r\n  const [paymentMethod, setPaymentMethod] = useState('');\r\n  const [orderPlaced, setOrderPlaced] = useState(false);\r\n\r\n  // Fetch all products and cart items on load\r\n  useEffect(() => {\r\n    fetch('http://localhost:4000/allproducts')\r\n      .then((response) => response.json())\r\n      .then((data) => setAll_Product(data));\r\n\r\n    if (localStorage.getItem('auth-token')) {\r\n      fetch('http://localhost:4000/getcart', {\r\n        method: 'POST',\r\n        headers: {\r\n          Accept: 'application/form-data',\r\n          'auth-token': `${localStorage.getItem('auth-token')}`,\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: \"\",\r\n      })\r\n        .then((response) => response.json())\r\n        .then((data) => setCartItems(data));\r\n    }\r\n  }, []);\r\n\r\n  // Add item to cart\r\n  const addToCart = (itemId) => {\r\n    setCartItems((prev) => ({ ...prev, [itemId]: prev[itemId] + 1 }));\r\n    if (localStorage.getItem('auth-token')) {\r\n      fetch('http://localhost:4000/addtocart', {\r\n        method: 'POST',\r\n        headers: {\r\n          Accept: 'application/form-data',\r\n          'auth-token': `${localStorage.getItem('auth-token')}`,\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ \"itemId\": itemId }),\r\n      }).then((response) => response.json())\r\n        .then((data) => console.log(data));\r\n    }\r\n  };\r\n\r\n  // Remove item from cart\r\n  const removeFromCart = (itemId) => {\r\n    setCartItems((prev) => ({ ...prev, [itemId]: prev[itemId] - 1 }));\r\n    if (localStorage.getItem('auth-token')) {\r\n      fetch('http://localhost:4000/removefromcart', {\r\n        method: 'POST',\r\n        headers: {\r\n          Accept: 'application/form-data',\r\n          'auth-token': `${localStorage.getItem('auth-token')}`,\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ \"itemId\": itemId }),\r\n      })\r\n        .then((response) => response.json())\r\n        .then((data) => console.log(data));\r\n    }\r\n  };\r\n\r\n  // Get total cart amount\r\n  const getTotalCartAmount = () => {\r\n    let totalAmount = 0;\r\n\r\n    for (const item in cartItems) {\r\n      if (cartItems[item] > 0) {\r\n        let itemInfo = all_product.find((product) => product.id === Number(item));\r\n        if (itemInfo) {\r\n          totalAmount += itemInfo.new_price * cartItems[item];\r\n        }\r\n      }\r\n    }\r\n\r\n    return totalAmount;\r\n  };\r\n\r\n  // Get total cart items\r\n  const getTotalCartItems = () => {\r\n    let totalItem = 0;\r\n\r\n    for (const item in cartItems) {\r\n      if (cartItems[item] > 0) {\r\n        totalItem += cartItems[item];\r\n      }\r\n    }\r\n    return totalItem;\r\n  };\r\n\r\n  // Handle order placement\r\n  const handleOrderPlacement = async () => {\r\n    if (\r\n      shippingDetails.name &&\r\n      shippingDetails.phone &&\r\n      shippingDetails.city &&\r\n      shippingDetails.address &&\r\n      paymentMethod\r\n    ) {\r\n      const orderData = {\r\n        shippingDetails,\r\n        paymentMethod,\r\n        cartData: cartItems,\r\n      };\r\n\r\n      try {\r\n        const response = await fetch('http://localhost:4000/checkout', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            'auth-token': localStorage.getItem('auth-token'),\r\n          },\r\n          body: JSON.stringify(orderData),\r\n        });\r\n\r\n        if (!response.ok) {\r\n          throw new Error(\"Network response was not ok\");\r\n        }\r\n\r\n        const data = await response.json();\r\n\r\n        if (data.success) {\r\n          setOrderPlaced(true);\r\n          setCartItems(getDefaultCart()); // Clear cart after order is placed\r\n          alert(data.message);\r\n        } else {\r\n          alert(\"Order placement failed. Please try again.\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error placing order:\", error);\r\n        alert(\"An error occurred. Please try again.\");\r\n      }\r\n    } else {\r\n      alert('Please fill in all details and select a payment method');\r\n    }\r\n  };\r\n\r\n  const contextValue = {\r\n    getTotalCartItems,\r\n    getTotalCartAmount,\r\n    all_product,\r\n    cartItems,\r\n    addToCart,\r\n    removeFromCart,\r\n    handleOrderPlacement,\r\n    setShippingDetails,\r\n    setPaymentMethod,\r\n    orderPlaced,\r\n  };\r\n\r\n  return (\r\n    <ShopContext.Provider value={contextValue}>\r\n      {props.children}\r\n    </ShopContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ShopContextProvider;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}