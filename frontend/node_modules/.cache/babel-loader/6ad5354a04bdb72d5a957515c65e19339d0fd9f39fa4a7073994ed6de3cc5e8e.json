{"ast":null,"code":"var _jsxFileName = \"D:\\\\VTO.1\\\\frontend\\\\src\\\\Pages\\\\Profile.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './Profile.css';\nimport dummyProfileImage from '../Assets/dummyProfileImage.png'; // Path to your default image\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Profile = () => {\n  _s();\n  const [profileData, setProfileData] = useState({\n    name: '',\n    email: '',\n    password: '********',\n    // Placeholder for security\n    address: '',\n    // Example additional field\n    phone: '' // Example additional field\n  });\n  const [newPassword, setNewPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const [oldPassword, setOldPassword] = useState('');\n\n  // Fetch profile data on component mount\n  useEffect(() => {\n    const fetchProfileData = async () => {\n      try {\n        const response = await axios.get('http://localhost:4000/profile', {\n          headers: {\n            'auth-token': localStorage.getItem('auth-token')\n          }\n        });\n        setProfileData({\n          ...profileData,\n          name: response.data.user.name,\n          email: response.data.user.email,\n          address: response.data.user.address || 'Not Provided',\n          // Handle empty or missing fields\n          phone: response.data.user.phone || 'Not Provided' // Handle empty or missing fields\n        });\n      } catch (error) {\n        console.error('Error fetching profile:', error);\n        setMessage('Failed to load profile data');\n      }\n    };\n    fetchProfileData();\n  }, []);\n\n  // Handle password reset\n  const handlePasswordReset = async () => {\n    try {\n      const response = await axios.post('http://localhost:4000/profile/reset-password', {\n        oldPassword,\n        newPassword\n      }, {\n        headers: {\n          'auth-token': localStorage.getItem('auth-token')\n        }\n      });\n      if (response.data.success) {\n        setMessage('Password reset successful');\n      } else {\n        setMessage('Failed to reset password');\n      }\n    } catch (error) {\n      console.error('Error resetting password:', error);\n      setMessage('Failed to reset password');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Your Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"profile-message\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-image\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: dummyProfileImage,\n        alt: \"Profile\",\n        className: \"profile-img\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 12\n        }, this), \" \", profileData.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 12\n        }, this), \" \", profileData.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 12\n        }, this), \" \", profileData.password]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Address:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 12\n        }, this), \" \", profileData.address]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Phone:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 12\n        }, this), \" \", profileData.phone]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-reset\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Enter old password\",\n        value: oldPassword,\n        onChange: e => setOldPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Enter new password\",\n        value: newPassword,\n        onChange: e => setNewPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handlePasswordReset,\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(Profile, \"JnS7ZJ7GsJ0atXJAjyz0IMs1iLY=\");\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useState","useEffect","axios","dummyProfileImage","jsxDEV","_jsxDEV","Profile","_s","profileData","setProfileData","name","email","password","address","phone","newPassword","setNewPassword","message","setMessage","oldPassword","setOldPassword","fetchProfileData","response","get","headers","localStorage","getItem","data","user","error","console","handlePasswordReset","post","success","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["D:/VTO.1/frontend/src/Pages/Profile.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './Profile.css';\r\nimport dummyProfileImage from '../Assets/dummyProfileImage.png'; // Path to your default image\r\n\r\nconst Profile = () => {\r\n  const [profileData, setProfileData] = useState({\r\n    name: '',\r\n    email: '',\r\n    password: '********', // Placeholder for security\r\n    address: '',          // Example additional field\r\n    phone: '',            // Example additional field\r\n  });\r\n  const [newPassword, setNewPassword] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const [oldPassword, setOldPassword] = useState('');\r\n\r\n  // Fetch profile data on component mount\r\n  useEffect(() => {\r\n    const fetchProfileData = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:4000/profile', {\r\n          headers: {\r\n            'auth-token': localStorage.getItem('auth-token'),\r\n          },\r\n        });\r\n        setProfileData({\r\n          ...profileData,\r\n          name: response.data.user.name,\r\n          email: response.data.user.email,\r\n          address: response.data.user.address || 'Not Provided', // Handle empty or missing fields\r\n          phone: response.data.user.phone || 'Not Provided', // Handle empty or missing fields\r\n        });\r\n      } catch (error) {\r\n        console.error('Error fetching profile:', error);\r\n        setMessage('Failed to load profile data');\r\n      }\r\n    };\r\n    fetchProfileData();\r\n  }, []);\r\n\r\n  // Handle password reset\r\n  const handlePasswordReset = async () => {\r\n    try {\r\n      const response = await axios.post(\r\n        'http://localhost:4000/profile/reset-password',\r\n        {\r\n          oldPassword,\r\n          newPassword,\r\n        },\r\n        {\r\n          headers: {\r\n            'auth-token': localStorage.getItem('auth-token'),\r\n          },\r\n        }\r\n      );\r\n      if (response.data.success) {\r\n        setMessage('Password reset successful');\r\n      } else {\r\n        setMessage('Failed to reset password');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error resetting password:', error);\r\n      setMessage('Failed to reset password');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"profile\">\r\n      <h1>Your Profile</h1>\r\n      {message && <p className=\"profile-message\">{message}</p>}\r\n\r\n      {/* Profile Image */}\r\n      <div className=\"profile-image\">\r\n        <img src={dummyProfileImage} alt=\"Profile\" className=\"profile-img\" />\r\n      </div>\r\n\r\n      {/* Profile Information */}\r\n      <div className=\"profile-info\">\r\n        <p><strong>Name:</strong> {profileData.name}</p>\r\n        <p><strong>Email:</strong> {profileData.email}</p>\r\n        <p><strong>Password:</strong> {profileData.password}</p>\r\n        <p><strong>Address:</strong> {profileData.address}</p>\r\n        <p><strong>Phone:</strong> {profileData.phone}</p>\r\n      </div>\r\n\r\n      {/* Password Reset Section */}\r\n      <div className=\"profile-reset\">\r\n        <h3>Reset Password</h3>\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Enter old password\"\r\n          value={oldPassword}\r\n          onChange={(e) => setOldPassword(e.target.value)}\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Enter new password\"\r\n          value={newPassword}\r\n          onChange={(e) => setNewPassword(e.target.value)}\r\n        />\r\n        <button onClick={handlePasswordReset}>Reset Password</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}