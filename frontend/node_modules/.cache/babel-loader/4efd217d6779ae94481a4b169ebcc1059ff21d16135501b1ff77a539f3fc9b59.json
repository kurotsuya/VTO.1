{"ast":null,"code":"var _jsxFileName = \"D:\\\\299\\\\VTO.1\\\\frontend\\\\src\\\\Pages\\\\LoginSignup.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './CSS/LoginSignup.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LoginSignup = () => {\n  _s();\n  const [state, setState] = useState(\"Login\");\n  // state is a state variable that is initialized with the value \"Login\"\n  //This variable likely indicates whether the component is currently in login mode or signup mode.\n  //setState is the function used to update this state. It can be called later to switch between \"Login\" and \"Signup\" modes.\n\n  const [formData, setFormData] = useState({\n    username: \"\",\n    password: \"\",\n    email: \"\"\n  });\n  const changeHandler = e => {\n    // a function named changeHandler that takes an event object e as an argument\n    // This function will be called whenever an input field's value change\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n    //e.target.name the field name being changed\n    //e.target.value this gets the current value of the input field that triggered the change event.\n    //store all the changes into the formData object\n    //setFormData will update the formData object\n  };\n  const login = async () => {\n    //an asynchronous login function designed to handle user login by sending a request to a backend server\n    console.log(\"Login Function Executed\", formData); //This line logs a message and the current state of formData to the console for debugging purposes. \n    let responseData; //A variable named responseData is declared to store the response data from the server after the login request is completed.\n    await fetch('http://localhost:4000/login', {\n      //fetch is used to send a POST request to the login endpoint at http://localhost:4000/login.\n      method: 'POST',\n      //The method property specifies that this is a POST request.\n      headers: {\n        // header object\n        Accept: 'application/form-data',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(formData)\n    }).then(response => response.json()).then(data => responseData = data);\n    if (responseData.success) {\n      localStorage.setItem('auth-token', responseData.token);\n      window.location.replace(\"/\");\n    } else {\n      alert(responseData.errors);\n    }\n  };\n  const signup = async () => {\n    console.log(\"Signup Function Executed\", formData);\n    let responseData;\n    await fetch('http://localhost:4000/signup', {\n      method: 'POST',\n      headers: {\n        Accept: 'application/form-data',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(formData)\n    }).then(response => response.json()).then(data => responseData = data);\n    if (responseData.success) {\n      localStorage.setItem('auth-token', responseData.token);\n      window.location.replace(\"/\");\n    } else {\n      alert(responseData.errors);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loginsignup\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loginsignup-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: state\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loginsignup-fields\",\n        children: [state === \"Sign Up\" ? /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"username\",\n          value: formData.username,\n          onChange: changeHandler,\n          type: \"text\",\n          placeholder: \"Your Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 24\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"email\",\n          value: formData.email,\n          onChange: changeHandler,\n          type: \"email\",\n          placeholder: \"Email Adress\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"password\",\n          value: formData.password,\n          onChange: changeHandler,\n          type: \"password\",\n          placeholder: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          state === \"Login\" ? login() : signup();\n        },\n        children: \"Continue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 5\n      }, this), state === \"Sign Up\" ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"loginsignup-login\",\n        children: [\"Already have an account?\", /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: () => {\n            setState(\"Login\");\n          },\n          children: \" Login here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 63\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 6\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"loginsignup-login\",\n        children: [\"Create an account?\", /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: () => {\n            setState(\"Sign Up\");\n          },\n          children: \" Click here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 57\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loginsignup-agree\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          name: \"\",\n          id: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"By proceeding, I agree to the terms of use & privacy policy,\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginSignup, \"BVpKwO8lLGFIEjA0vMkoUZ2ZJNs=\");\n_c = LoginSignup;\nexport default LoginSignup;\nvar _c;\n$RefreshReg$(_c, \"LoginSignup\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","LoginSignup","_s","state","setState","formData","setFormData","username","password","email","changeHandler","e","target","name","value","login","console","log","responseData","fetch","method","headers","Accept","body","JSON","stringify","then","response","json","data","success","localStorage","setItem","token","window","location","replace","alert","errors","signup","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","type","placeholder","onClick","id","_c","$RefreshReg$"],"sources":["D:/299/VTO.1/frontend/src/Pages/LoginSignup.jsx"],"sourcesContent":["import React, {useState} from 'react'\r\nimport './CSS/LoginSignup.css'\r\n\r\n const LoginSignup = () => {\r\n\r\n const [state,setState] = useState(\"Login\");\r\n // state is a state variable that is initialized with the value \"Login\"\r\n //This variable likely indicates whether the component is currently in login mode or signup mode.\r\n //setState is the function used to update this state. It can be called later to switch between \"Login\" and \"Signup\" modes.\r\n\r\n const[formData, setFormData] = useState({\r\n  username:\"\",\r\n  password:\"\",\r\n  email:\"\"\r\n\r\n })\r\n\r\n const changeHandler = (e)=>{\r\n  // a function named changeHandler that takes an event object e as an argument\r\n  // This function will be called whenever an input field's value change\r\n  setFormData({...formData, [e.target.name]:e.target.value})\r\n  //e.target.name the field name being changed\r\n  //e.target.value this gets the current value of the input field that triggered the change event.\r\n  //store all the changes into the formData object\r\n  //setFormData will update the formData object\r\n\r\n }\r\n\r\n\r\n const login = async() =>{\r\n  //an asynchronous login function designed to handle user login by sending a request to a backend server\r\n  console.log(\"Login Function Executed\", formData);//This line logs a message and the current state of formData to the console for debugging purposes. \r\n  let responseData;//A variable named responseData is declared to store the response data from the server after the login request is completed.\r\n  await fetch('http://localhost:4000/login',{ //fetch is used to send a POST request to the login endpoint at http://localhost:4000/login.\r\n    method: 'POST', //The method property specifies that this is a POST request.\r\n    headers:{ // header object\r\n      Accept:'application/form-data',\r\n      'Content-Type':'application/json',\r\n    },\r\n    body: JSON.stringify(formData),\r\n\r\n  }).then((response)=>response.json()).then((data)=>responseData=data)\r\n  if(responseData.success){\r\n    localStorage.setItem('auth-token', responseData.token);\r\n    window.location.replace(\"/\");\r\n  }\r\n  else{\r\n    alert(responseData.errors)\r\n  }\r\n\r\n }\r\n\r\n const signup = async() =>{\r\n  console.log(\"Signup Function Executed\", formData);\r\n  let responseData;\r\n  await fetch('http://localhost:4000/signup',{\r\n    method: 'POST',\r\n    headers:{\r\n      Accept:'application/form-data',\r\n      'Content-Type':'application/json',\r\n    },\r\n    body: JSON.stringify(formData),\r\n\r\n  }).then((response)=>response.json()).then((data)=>responseData=data)\r\n  if(responseData.success){\r\n    localStorage.setItem('auth-token', responseData.token);\r\n    window.location.replace(\"/\");\r\n  }\r\n  else{\r\n    alert(responseData.errors)\r\n  }\r\n }\r\n\r\n\r\n\r\n  return (\r\n    <div className = 'loginsignup'>\r\n\r\n    <div className=\"loginsignup-container\">\r\n    <h1>{state}</h1>\r\n    <div className =\"loginsignup-fields\">\r\n    {state===\"Sign Up\"?<input name='username' value={formData.username} onChange={changeHandler} type = \"text\" placeholder ='Your Name'/>:<></>}\r\n    <input name='email' value={formData.email} onChange={changeHandler} type = \"email\" placeholder ='Email Adress'/>\r\n    <input name='password' value={formData.password}  onChange={changeHandler}  type = \"password\"  placeholder = 'Password' />\r\n    </div>\r\n    <button onClick={()=>{state===\"Login\"?login():signup()}} >Continue</button>\r\n    {state===\"Sign Up\"\r\n    ?<p className=\"loginsignup-login\">Already have an account?<span onClick={()=>{setState(\"Login\")}}> Login here</span></p>\r\n    :<p className=\"loginsignup-login\">Create an account?<span onClick ={()=>{setState(\"Sign Up\")}}> Click here</span></p>}\r\n    \r\n    \r\n    <div className=\"loginsignup-agree\">\r\n      <input type= \"checkbox\" name = '' id =''/>\r\n      <p>By proceeding, I agree to the terms of use & privacy policy,</p>\r\n    </div>\r\n    </div>      \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LoginSignup\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}